[project]
name = "pyeclab"
version = "0.2.0"
description = "A Python wrapper around the EC-Lab SDK for the control of BioLogic potentiostats."
authors = [
    {name = "Federico Scarpioni", email = "federicoscarpioni@gmail.com"},
    {name = "Jan Conen", email = "janconen@posteo.de"},
]
maintainers = [
    {name = "Federico Scarpioni", email = "federicoscarpioni@gmail.com"},
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "matplotlib",
    "pandas",
    "numpy",
    "attrs",
]
license = "MIT"
licence-files = ["LICENCE"]

[project.optional-dependencies]
dev = ["pytest"]

[project.urls]
Repository = "https://github.com/federicoscarpioni/pyeclab.git"
Issues = "https://github.com/federicoscarpioni/pyeclab/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["B", "E", "F", "S", "UP"]
exclude = ["E741"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]